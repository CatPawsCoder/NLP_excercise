7 Лекция 7. Pascal — язык структурного программирования
7.1 История Паскаля
Язык программирования Паскаль был создан швейцарским профессором 
Никлаусом Виртом в 1969 году как язык для обучения студентов структурной 
методике программирования. Язык получил свое название в честь Блеза Паскаля, изобретателя первого вычислительного механического устройства. Позднее 
фирма Borland International, Inc (США) разработала систему программирования 
Турбо Паскаль для персональных компьютеров, которая вышла за рамки учебного применения и стала использоваться для научных и производственных целей. В Турбо Паскаль были внесены некоторые дополнения к базовому стандарту Паскаля, описанному Н. Виртом.
76
Со временем язык развивался. Начиная с версии 5.5, в Турбо Паскаль 
вводятся средства поддержки объектно-ориентированного программирования 
(ООП). В дальнейшем это привело к созданию Object Pascal — языка с возможностями объектно-ориентированного программирования. В начале 1990-х годов 
объединение элементов ООП в Паскале с визуальной технологией программирования привело к созданию системы программирования Delphi.
7.2 Структура процедурных языков программирования высокого 
уровня
Во всяком языке программирования определены способы организации 
данных и способы организаций действий над данными. Кроме того, существует 
понятие «элементы языка», включающее в себя множество символов (алфавит), 
служебных слов и других изобразительных средств языка программирования. 
Несмотря на разнообразие процедурных языков, их изучение происходит 
приблизительно по одной схеме. Это связано с общностью структуры 
различных процедурных языков программирования высокого уровня. 
Всякий язык программирования образуют три его основные 
составляющие: алфавит, синтаксис и семантика. Алфавит — это множество 
символов, допустимых в записи текстов программ. Синтаксис — это 
правописание языковых конструкций (имен, констант, выражений, операторов 
и пр.). Семантика — это смысловое содержание языковой конструкции.
Соблюдение правил в языке программирования должно быть более строгим, чем в разговорном языке. Человеческая речь содержит значительное количество избыточной информации. Слушающий или читающий человек может 
додумать, дополнить, исправить ошибки в воспринимаемом тексте. Компьютер 
же — автомат, воспринимающий всё буквально. В текстах программ нет избыточности, компьютер сам не исправит даже очевидной (с точки зрения человека) ошибки. Он может лишь указать на место, которое «не понял», и вывести 
замечание о предполагаемом характере ошибки. Исправить же ошибку должен 
программист.
77
7.3 Структура программы на Паскале
По определению стандартного Паскаля, программа состоит из заголовка 
программы и тела программы (блока), за которым следует точка — признак 
конца программы. В свою очередь, блок содержит разделы описаний (меток, 
констант, типов, переменных, подпрограмм) и раздел операторов.
Раздел операторов имеется в любой программе и является основным. 
Предшествующие разделы носят характер описаний и не все обязательно присутствуют в каждой программе. В Турбо Паскале, в отличие от базового стандарта Паскаля, возможно отсутствие заголовка программы; разделы Const, 
Type, Var, Label могут следовать друг за другом в любом порядке и повторяться 
в разделе описаний сколько угодно раз. Алфавит языка состоит из множества 
символов, включающих в себя буквы, цифры и специальные символы.
Латинские буквы: от А до Z (заглавные) и от a до z (строчные).
Цифры: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.
Специальные символы: + - * / = <> [ ] . , ( ) : ; { } ^ @ $ #.
Следующие комбинации специальных символов являются едиными символами (их нельзя разделять пробелами):
Пробелы — символ пробела (код ASCII 32) и все управляющие символы 
кода ASCII (от 0 до 31).
78
Служебные слова. К спецсимволам относятся и служебные слова, смысл 
которых определен однозначно. Служебные слова не могут быть использованы 
для других целей. С точки зрения языка, они являются едиными элементами 
алфавита. Вот некоторые служебные слова: Program, Var, array, If, Do, While.
Идентификаторы. Идентификатором называется символическое имя определенного программного объекта. Такими объектами являются: имена констант, переменных, типов данных, процедур и функций, программ. Идентификатор — это любая последовательность букв и цифр, начинающаяся с буквы. К 
буквам приравнивается также знак подчеркивания. Длина идентификатора может быть произвольной, но значащими являются только первые 63 символа.
Комментарии. Следующие конструкции представляют собой комментарии и поэтому пропускаются компилятором:
{любой текст, не содержащий символ «фигурная скобка»}
(* любой текст, не содержащий символы «звездочка, круглая скобка»*)
//последующий текст до конца строки.
Буквы русского алфавита употребляются только в комментариях, символьных и текстовых константах.
Концепция типов данных является одной из центральных в любом языке 
программирования. Как вы знаете, с типом величины связаны три ее свойства: 
форма внутреннего представления, множество принимаемых значений и множество допустимых операций. Паскаль характеризуется большим разнообразием типов данных, отраженным на рисунке 9.
Рисунок 9 – Система типов данных языка Паскаль
79
Тип данных называется порядковым, если он состоит из счетного количества значений, которые можно пронумеровать. Каждый тип имеет свой идентификатор. На рисунке 10 представлена информация о простых типах данных, 
определенных в Турбо Паскале и последующих диалектах языка. Для вещественных типов в скобках указано количество сохраняемых значащих цифр мантиссы в десятичном представлении числа.
Рисунок 10 –Типы данных
Типы пользователя. Одна из принципиальных возможностей Паскаля состоит в том, что пользователю разрешается определять свои типы данных. Типы пользователя всегда базируются на стандартных типах данных Паскаля. Для 
описания типов пользователя в Паскале существует раздел типов, начинающийся со служебного слова Туре. К простым типам пользователя относятся перечислимый и интервальный типы данных.
Перечислимый тип задается непосредственно перечислением (списком) 
всех значений, которые может принимать переменная данного типа:
Туре <имя типа> = (<список значений>)
80
Определенное таким образом имя типа затем используется для описания 
переменных. Например:
Здесь Gaz и Metal — имена перечислимых типов, которые ставятся в соответствие переменным Gl, G2, G3 и Met 1, Met2. Переменной Day назначается 
перечислимый тип, которому не присвоено имени. Значения, входящие в перечислимый тип, являются константами. Действия над ними подчиняются правилам, применимым к константам. Каждое значение в перечислимом типе занимает в памяти 2 байта, поэтому число значений этого типа не должно превышать 65 535. Перечислимый тип — упорядоченное множество. Его элементы 
пронумерованы, начиная от 0 в порядке следования в описании.
В программе, в которой присутствует данное выше описание переменной Day, возможен такой фрагмент:
Ограниченный тип задается как упорядоченное ограниченное подмножество некоторого порядкового типа:<константа 1>..<константа 2>
Порядковый номер первой константы не должен превышать номера второй константы в соответствующем базовом типе. При исполнении программы 
автоматически контролируется принадлежность значений переменной ограниченного типа установленному диапазону. При выходе из диапазона исполнение 
программы прерывается. Например:
Структурные типы. Особенностью Паскаля является то, что в нем структуры данных рассматриваются как типы — структурные типы данных. Одна 
величина простого типа представляет собой одно значение: целое число, веще-
81
ственное число, символ и пр. Одна величина структурного типа представляет 
собой совокупность множества значений; примеры — числовой массив, символьная строка и пр.
8 Лекция 8. Операции, функции, выражения языка Pascal
8.1. Операции, функции, выражени